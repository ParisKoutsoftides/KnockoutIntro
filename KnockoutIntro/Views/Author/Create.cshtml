@model KnockoutIntro.Models.Author

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Author</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Create", "Author", FormMethod.Post, new { data_bind = "submit: validateAndSave" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", data_bind = "value: firstName", placeholder="First Name..."} })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", data_bind = "value: lastName", placeholder = "Last Name..." } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Biography, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Biography, new { htmlAttributes = new { @class = "form-control", data_bind = "value: biography", placeholder = "Biography..." } })
                    @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        }
    </div>
</div>

<div>   
    <a class="btn btn-primary" asp-action="Index">Back to List</a>
</div>

<script>
    function authorViewModel() {
        var self = this;

        self.firstName = ko.observable("");
        self.lastName = ko.observable("");
        self.biography = ko.observable("");

        self.result = ko.computed(function () {
            return {
                FirstName: self.firstName(),
                LastName: self.lastName(),
                Biography: self.biography()
            }
        });

        self.validateAndSave = function (form) {

            if (!$(form).valid())
                return false;


            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
            $.ajax("/Author/Create", {
                beforeSend: function (request) {
                    request.setRequestHeader("RequestVerificationToken", antiForgeryToken);
                },
                data: ko.toJS(self.result()),
                type: "POST",
                contentType: 'application/x-www-form-urlencoded',
                success: function () {
                    console.log("sucess");
                    $('.body-content').prepend('<div class="alert alert-success"><strong>Success!</strong> The new author has been saved.</div>');
                    setTimeout(function () { location.href = './'; }, 1000);
                },
                error: function () {
                    console.log("fail");
                    $('.body-content').prepend('<div class="alert alert-danger"><strong>Error!</strong> There was an error creating the author.</div>');
                }
            });
        };
    };

    ko.applyBindings(new authorViewModel());

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}